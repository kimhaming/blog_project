plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'me.kimhaming'
version = '1.0'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

    dependencies {
        // 롬복
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'

        implementation 'org.springframework.boot:spring-boot-starter-web'
        // 스프링 데이터 JPA
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        // 인메모리 데이터베이스
        runtimeOnly 'com.h2database:h2'
        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        // 타임리프
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        // JUnit Jupiter, Hamcrest 및 Mockito를 포함한 라이브러리 포함
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        // 스프링 시큐리티를 사용하기 위한 스타터 추가
        implementation 'org.springframework.boot:spring-boot-starter-security'
        // 타임리프에서 스프링 시큐리티를 사용하기 위한 의존성 추가
        implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
        // 스프링 시큐리티를 테스트하기 위한 의존성 추가
        testImplementation 'org.springframework.security:spring-security-test'

        // MySQL JDBC 드라이버 추가
        runtimeOnly 'mysql:mysql-connector-java'

        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'
        implementation 'io.jsonwebtoken:jjwt:0.9.1' // 자바 JWT 라이브러리
        implementation 'javax.xml.bind:jaxb-api:2.3.1'  // XML 문서와 Java 객체 간 매핑 자동화

        // swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    }

tasks.named('test') {
    useJUnitPlatform()
}
